"use strict";
const React = require('react');
const Card_1 = require('material-ui/Card');
let content = React.createElement("div", null, React.createElement(Card_1.Card, null, React.createElement(Card_1.CardText, null, "The best way to become familiar with the explorer is to ", React.createElement("span", {style: { fontStyle: 'italic' }}, "play with it"), " (experiment)." + ' ' + "Once in a while, review the lists below. Click on any title below for details.")), React.createElement(Card_1.Card, null, React.createElement(Card_1.CardTitle, {actAsExpander: true, showExpandableButton: true}, "Dataset Options"), React.createElement(Card_1.CardText, {expandable: true, style: { paddingTop: "0px" }}, React.createElement("p", null, "In the explorer charts, Viewpoints include:"), React.createElement("dl", null, React.createElement("dt", null, React.createElement("strong", null, "Functional")), React.createElement("dd", null, "combines City of Toronto Agencies and Divisions into groups according to the nature of the services delivered (this is the default ) "), React.createElement("dt", null, React.createElement("strong", null, "Structural")), React.createElement("dd", null, "more traditional: separates Agencies from Divisions; groupings are closer to those found" + ' ' + "in City annual Budget Summaries")), React.createElement("p", null, "Facets are the main datasets available: Expenditures, Revenues, and Staffing Positions (Full Time Equivalents) "), React.createElement("p", null, "This prototype uses data from the City Council Approved Operating Budget Summary 2015 from the City of Toronto's open data portal"), React.createElement("p", null, "Click or tap on any column in the \"By Programs\" charts to drill-down. Other charts do not" + ' ' + "currently support drill-down."))), React.createElement(Card_1.Card, null, React.createElement(Card_1.CardTitle, {actAsExpander: true, showExpandableButton: true}, "Chart Options"), React.createElement(Card_1.CardText, {expandable: true, style: { paddingTop: "0px" }}, "chart options content")), React.createElement(Card_1.Card, null, React.createElement(Card_1.CardTitle, {actAsExpander: true, showExpandableButton: true}, "Context Options"), React.createElement(Card_1.CardText, {expandable: true, style: { paddingTop: "0px" }}, "context options content")));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = content;
